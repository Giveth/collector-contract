{
  "address": "0x9E1019f17d96175273Cc2867A17FD334459Fa268",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownerAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiaryAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBeneficiary",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldBeneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBeneficiary",
          "type": "address"
        }
      ],
      "name": "BeneficiaryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Collected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnTokens",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiaryAddr",
          "type": "address"
        }
      ],
      "name": "changeBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xea77b53327fcea8c198076295abc581627ec848739d374b98470b9b8f29b2acb",
  "receipt": {
    "to": null,
    "from": "0x0018e587758f141Eb59dfb6906c0d2BC843BB903",
    "contractAddress": "0x9E1019f17d96175273Cc2867A17FD334459Fa268",
    "transactionIndex": 56,
    "gasUsed": "846789",
    "logsBloom": "0x
    "blockHash": "0x7917ffad7e62a49cfa5e68ecf3645552b479328141ade2d2a1d93d6f024742ee",
    "transactionHash": "0xea77b53327fcea8c198076295abc581627ec848739d374b98470b9b8f29b2acb",
    "logs": [
      {
        "transactionIndex": 56,
        "blockNumber": 14909041,
        "transactionHash": "0xea77b53327fcea8c198076295abc581627ec848739d374b98470b9b8f29b2acb",
        "address": "0x9E1019f17d96175273Cc2867A17FD334459Fa268",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000018e587758f141eb59dfb6906c0d2bc843bb903"
        ],
        "data": "0x",
        "logIndex": 35,
        "blockHash": "0x7917ffad7e62a49cfa5e68ecf3645552b479328141ade2d2a1d93d6f024742ee"
      },
      {
        "transactionIndex": 56,
        "blockNumber": 14909041,
        "transactionHash": "0xea77b53327fcea8c198076295abc581627ec848739d374b98470b9b8f29b2acb",
        "address": "0x9E1019f17d96175273Cc2867A17FD334459Fa268",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000018e587758f141eb59dfb6906c0d2bc843bb903",
          "0x000000000000000000000000839395e20bbb182fa440d08f850e6c7a8f6f0780"
        ],
        "data": "0x",
        "logIndex": 36,
        "blockHash": "0x7917ffad7e62a49cfa5e68ecf3645552b479328141ade2d2a1d93d6f024742ee"
      }
    ],
    "blockNumber": 14909041,
    "cumulativeGasUsed": "3432723",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
    "0x3EFa0Ab6F541B075cFCc2388b2E060196aC26181"
  ],
  "numDeployments": 1,
  "solcInputHash": "67c7dce0d554798cd0baee140f86e498",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiaryAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBeneficiary\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldBeneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBeneficiary\",\"type\":\"address\"}],\"name\":\"BeneficiaryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Collected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddr\",\"type\":\"address\"}],\"name\":\"changeBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Giveth developers\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"Address of the beneficiary.\"}},\"changeBeneficiary(address)\":{\"details\":\"Can only be called by the owner. Beneficiary cannot be address zero.\",\"params\":{\"beneficiaryAddr\":\"The new beneficiary.\"}},\"constructor\":{\"details\":\"Construct the collector, set the owner and beneficiary\",\"params\":{\"beneficiaryAddr\":\"Address that will be the beneficiary\",\"ownerAddr\":\"Address that will own the contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"Can only be called by the beneficiary.\"},\"withdrawTokens(address)\":{\"details\":\"Can only be called by the beneficiary. Token must be a valid ERC20 contract.\",\"params\":{\"token\":\"Token contract address.\"}}},\"title\":\"Collector\",\"version\":1},\"userdoc\":{\"errors\":{\"NoAddressZero()\":[{\"notice\":\"Must not be zero address.\"}],\"OnlyBeneficiary()\":[{\"notice\":\"Must be called by the beneficiary address\"}]},\"events\":{\"BeneficiaryChanged(address,address)\":{\"notice\":\"Emitted when the beneficiary is changed by the owner.\"},\"Collected(address,uint256)\":{\"notice\":\"Emitted when the collector contract receives ETH.\"},\"Withdrawn(address,uint256)\":{\"notice\":\"Emitted when the collected ETH was withdrawn.\"},\"WithdrawnTokens(address,address,uint256)\":{\"notice\":\"Emitted when the collected tokens were withdrawn.\"}},\"kind\":\"user\",\"methods\":{\"beneficiary()\":{\"notice\":\"Returns the beneficiary address.\"},\"changeBeneficiary(address)\":{\"notice\":\"Change the beneficiary address.\"},\"withdraw()\":{\"notice\":\"Withdraw all the collected ETH.\"},\"withdrawTokens(address)\":{\"notice\":\"Withdraw all the collected tokens from the given token contract.\"}},\"notice\":\"A simple collection contract that allows the beneficiary to withdraw collected ETH and ERC-20 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Collector.sol\":\"Collector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Collector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.14;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport '@openzeppelin/contracts/utils/Address.sol';\\n\\nimport './interfaces/ICollector.sol';\\n\\n/// Must be called by the beneficiary address\\nerror OnlyBeneficiary();\\n\\n/// Must not be zero address.\\nerror NoAddressZero();\\n\\n/// @title Collector\\n/// @author Giveth developers\\n/// @notice A simple collection contract that allows the beneficiary to withdraw collected ETH and ERC-20 tokens.\\ncontract Collector is ICollector, Ownable {\\n    ///\\n    /// STATE:\\n    ///\\n\\n    address internal _beneficiary;\\n\\n    ///\\n    /// MODIFIERS:\\n\\n    modifier onlyBeneficiary() {\\n        if (msg.sender != _beneficiary) {\\n            revert OnlyBeneficiary();\\n        }\\n        _;\\n    }\\n\\n    ///\\n    /// CONSTRUCTOR:\\n    ///\\n\\n    /// @dev Construct the collector, set the owner and beneficiary\\n    /// @param ownerAddr Address that will own the contract\\n    /// @param beneficiaryAddr Address that will be the beneficiary\\n    constructor(address ownerAddr, address beneficiaryAddr) {\\n        _beneficiary = beneficiaryAddr;\\n        _transferOwnership(ownerAddr);\\n    }\\n\\n    ///\\n    /// FALLBACK/RECEIVE;\\n    ///\\n\\n    /// @dev Contract collects ETH and emits a collected event.\\n    receive() external payable {\\n        emit Collected(msg.sender, msg.value);\\n    }\\n\\n    ///\\n    /// ADMIN FUNCTIONS:\\n    ///\\n\\n    /// @inheritdoc ICollector\\n    function changeBeneficiary(address beneficiaryAddr) external onlyOwner {\\n        if (beneficiaryAddr == address(0)) {\\n            revert NoAddressZero();\\n        }\\n        address oldBeneficiary = _beneficiary;\\n        _beneficiary = beneficiaryAddr;\\n        emit BeneficiaryChanged(oldBeneficiary, _beneficiary);\\n    }\\n\\n    ///\\n    /// EXTERNAL FUNCTIONS:\\n    ///\\n\\n    /// @inheritdoc ICollector\\n    function withdraw() external onlyBeneficiary {\\n        emit Withdrawn(msg.sender, address(this).balance);\\n        Address.sendValue(payable(_beneficiary), address(this).balance);\\n    }\\n\\n    /// @inheritdoc ICollector\\n    function withdrawTokens(address token) external onlyBeneficiary {\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\n        emit WithdrawnTokens(token, msg.sender, balance);\\n        SafeERC20.safeTransfer(IERC20(token), _beneficiary, balance);\\n    }\\n\\n    ///\\n    /// VIEW FUNCTIONS:\\n    ///\\n\\n    /// @inheritdoc ICollector\\n    function beneficiary() external view returns (address) {\\n        return _beneficiary;\\n    }\\n}\\n\",\"keccak256\":\"0xa648e8e2d8a1efdaca8ae64cfaeb43ac288dc356a36c863b80aa78cf2a9f5080\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ICollector.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.14;\\n\\n/// @title ICollector\\n/// @author Giveth developers\\n/// @notice Interface of the Collector contract.\\ninterface ICollector {\\n    ///\\n    /// ADMIN FUNCTIONS:\\n    ///\\n\\n    /// @notice Change the beneficiary address.\\n    /// @dev Can only be called by the owner. Beneficiary cannot be address zero.\\n    /// @param beneficiaryAddr The new beneficiary.\\n    function changeBeneficiary(address beneficiaryAddr) external;\\n\\n    ///\\n    /// EXTERNAL FUNCTIONS:\\n    ///\\n\\n    /// @notice Withdraw all the collected ETH.\\n    /// @dev Can only be called by the beneficiary.\\n    function withdraw() external;\\n\\n    /// @notice Withdraw all the collected tokens from the given token contract.\\n    /// @dev Can only be called by the beneficiary. Token must be a valid ERC20 contract.\\n    /// @param token Token contract address.\\n    function withdrawTokens(address token) external;\\n\\n    ///\\n    /// VIEW FUNCTIONS;\\n    ///\\n\\n    /// @notice Returns the beneficiary address.\\n    /// @return Address of the beneficiary.\\n    function beneficiary() external view returns (address);\\n\\n    ///\\n    /// EVENTS:\\n    ///\\n\\n    /// @notice Emitted when the beneficiary is changed by the owner.\\n    event BeneficiaryChanged(address indexed oldBeneficiary, address indexed newBeneficiary);\\n\\n    /// @notice Emitted when the collector contract receives ETH.\\n    event Collected(address sender, uint256 amount);\\n\\n    /// @notice Emitted when the collected ETH was withdrawn.\\n    event Withdrawn(address beneficiary, uint256 amount);\\n\\n    /// @notice Emitted when the collected tokens were withdrawn.\\n    event WithdrawnTokens(address indexed token, address beneficiary, uint256 amount);\\n}\\n\",\"keccak256\":\"0xc38c157c027850f34dc6ed0296deec7be6a465052588e89b7a1e64a1a1ea7aff\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e95380380610e9583398101604081905261002f916100cf565b61003833610063565b600180546001600160a01b0319166001600160a01b03831617905561005c82610063565b5050610102565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100ca57600080fd5b919050565b600080604083850312156100e257600080fd5b6100eb836100b3565b91506100f9602084016100b3565b90509250929050565b610d84806101116000396000f3fe6080604052600436106100745760003560e01c8063715018a61161004e578063715018a61461013f5780638da5cb5b14610154578063dc0706571461017f578063f2fde38b1461019f57600080fd5b806338af3eed146100b85780633ccfd60b1461010857806349df728c1461011f57600080fd5b366100b357604080513381523460208201527f8c22f554c81b54107cd95e734e4ef45767214974a540f34ea4a4f8c3fc7b13c3910160405180910390a1005b600080fd5b3480156100c457600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561011457600080fd5b5061011d6101bf565b005b34801561012b57600080fd5b5061011d61013a366004610c40565b61026d565b34801561014b57600080fd5b5061011d6103cc565b34801561016057600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100df565b34801561018b57600080fd5b5061011d61019a366004610c40565b61045c565b3480156101ab57600080fd5b5061011d6101ba366004610c40565b6105a1565b60015473ffffffffffffffffffffffffffffffffffffffff163314610210576040517f5e5a974900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080513381524760208201527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5910160405180910390a160015461026b9073ffffffffffffffffffffffffffffffffffffffff16476106d1565b565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102be576040517f5e5a974900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190610c76565b604080513381526020810183905291925073ffffffffffffffffffffffffffffffffffffffff8416917ff42f2a8394760dc35120388b26b990e21f70e894d51bdfbc1963dc1f26b64b27910160405180910390a26001546103c890839073ffffffffffffffffffffffffffffffffffffffff1683610830565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61026b60006108bd565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b73ffffffffffffffffffffffffffffffffffffffff811661052a576040517f1e194fd300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d90600090a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b73ffffffffffffffffffffffffffffffffffffffff81166106c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610449565b6106ce816108bd565b50565b8047101561073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610449565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b505090508061082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610449565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261082b908490610932565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610994826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610a3e9092919063ffffffff16565b80519091501561082b57808060200190518101906109b29190610c8f565b61082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610449565b6060610a4d8484600085610a57565b90505b9392505050565b606082471015610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610449565b73ffffffffffffffffffffffffffffffffffffffff85163b610b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610449565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b909190610ce1565b60006040518083038185875af1925050503d8060008114610bcd576040519150601f19603f3d011682016040523d82523d6000602084013e610bd2565b606091505b5091509150610be2828286610bed565b979650505050505050565b60608315610bfc575081610a50565b825115610c0c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104499190610cfd565b600060208284031215610c5257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a5057600080fd5b600060208284031215610c8857600080fd5b5051919050565b600060208284031215610ca157600080fd5b81518015158114610a5057600080fd5b60005b83811015610ccc578181015183820152602001610cb4565b83811115610cdb576000848401525b50505050565b60008251610cf3818460208701610cb1565b9190910192915050565b6020815260008251806020840152610d1c816040850160208701610cb1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212201c5ebb4742b6edc12191816f5362c56b4c939199d7eb01de7b32a1209a3e008464736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063715018a61161004e578063715018a61461013f5780638da5cb5b14610154578063dc0706571461017f578063f2fde38b1461019f57600080fd5b806338af3eed146100b85780633ccfd60b1461010857806349df728c1461011f57600080fd5b366100b357604080513381523460208201527f8c22f554c81b54107cd95e734e4ef45767214974a540f34ea4a4f8c3fc7b13c3910160405180910390a1005b600080fd5b3480156100c457600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561011457600080fd5b5061011d6101bf565b005b34801561012b57600080fd5b5061011d61013a366004610c40565b61026d565b34801561014b57600080fd5b5061011d6103cc565b34801561016057600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100df565b34801561018b57600080fd5b5061011d61019a366004610c40565b61045c565b3480156101ab57600080fd5b5061011d6101ba366004610c40565b6105a1565b60015473ffffffffffffffffffffffffffffffffffffffff163314610210576040517f5e5a974900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080513381524760208201527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5910160405180910390a160015461026b9073ffffffffffffffffffffffffffffffffffffffff16476106d1565b565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102be576040517f5e5a974900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190610c76565b604080513381526020810183905291925073ffffffffffffffffffffffffffffffffffffffff8416917ff42f2a8394760dc35120388b26b990e21f70e894d51bdfbc1963dc1f26b64b27910160405180910390a26001546103c890839073ffffffffffffffffffffffffffffffffffffffff1683610830565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61026b60006108bd565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b73ffffffffffffffffffffffffffffffffffffffff811661052a576040517f1e194fd300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d90600090a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b73ffffffffffffffffffffffffffffffffffffffff81166106c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610449565b6106ce816108bd565b50565b8047101561073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610449565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b505090508061082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610449565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261082b908490610932565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610994826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610a3e9092919063ffffffff16565b80519091501561082b57808060200190518101906109b29190610c8f565b61082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610449565b6060610a4d8484600085610a57565b90505b9392505050565b606082471015610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610449565b73ffffffffffffffffffffffffffffffffffffffff85163b610b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610449565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b909190610ce1565b60006040518083038185875af1925050503d8060008114610bcd576040519150601f19603f3d011682016040523d82523d6000602084013e610bd2565b606091505b5091509150610be2828286610bed565b979650505050505050565b60608315610bfc575081610a50565b825115610c0c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104499190610cfd565b600060208284031215610c5257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a5057600080fd5b600060208284031215610c8857600080fd5b5051919050565b600060208284031215610ca157600080fd5b81518015158114610a5057600080fd5b60005b83811015610ccc578181015183820152602001610cb4565b83811115610cdb576000848401525b50505050565b60008251610cf3818460208701610cb1565b9190910192915050565b6020815260008251806020840152610d1c816040850160208701610cb1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212201c5ebb4742b6edc12191816f5362c56b4c939199d7eb01de7b32a1209a3e008464736f6c634300080e0033",
  "devdoc": {
    "author": "Giveth developers",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "Address of the beneficiary."
        }
      },
      "changeBeneficiary(address)": {
        "details": "Can only be called by the owner. Beneficiary cannot be address zero.",
        "params": {
          "beneficiaryAddr": "The new beneficiary."
        }
      },
      "constructor": {
        "details": "Construct the collector, set the owner and beneficiary",
        "params": {
          "beneficiaryAddr": "Address that will be the beneficiary",
          "ownerAddr": "Address that will own the contract"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw()": {
        "details": "Can only be called by the beneficiary."
      },
      "withdrawTokens(address)": {
        "details": "Can only be called by the beneficiary. Token must be a valid ERC20 contract.",
        "params": {
          "token": "Token contract address."
        }
      }
    },
    "title": "Collector",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "NoAddressZero()": [
        {
          "notice": "Must not be zero address."
        }
      ],
      "OnlyBeneficiary()": [
        {
          "notice": "Must be called by the beneficiary address"
        }
      ]
    },
    "events": {
      "BeneficiaryChanged(address,address)": {
        "notice": "Emitted when the beneficiary is changed by the owner."
      },
      "Collected(address,uint256)": {
        "notice": "Emitted when the collector contract receives ETH."
      },
      "Withdrawn(address,uint256)": {
        "notice": "Emitted when the collected ETH was withdrawn."
      },
      "WithdrawnTokens(address,address,uint256)": {
        "notice": "Emitted when the collected tokens were withdrawn."
      }
    },
    "kind": "user",
    "methods": {
      "beneficiary()": {
        "notice": "Returns the beneficiary address."
      },
      "changeBeneficiary(address)": {
        "notice": "Change the beneficiary address."
      },
      "withdraw()": {
        "notice": "Withdraw all the collected ETH."
      },
      "withdrawTokens(address)": {
        "notice": "Withdraw all the collected tokens from the given token contract."
      }
    },
    "notice": "A simple collection contract that allows the beneficiary to withdraw collected ETH and ERC-20 tokens.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Collector.sol:Collector",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 894,
        "contract": "contracts/Collector.sol:Collector",
        "label": "_beneficiary",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}